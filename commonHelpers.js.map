{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["import axios from \"axios\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nconst iconLeft = new URL('/img/icons/arrow-icons.svg#icon-left', import.meta.url).href; \nconst iconRight = new URL('/img/icons/arrow-icons.svg#icon-right', import.meta.url).href; \nconst iconError = new URL('/img/icons/error-icon.svg', import.meta.url).href;\nconst iconWarn = new URL('/img/icons/warning-icon.svg', import.meta.url).href;\n// це єдиний варіант що я знайшов, щоб ці іконки працювали в мене на GitHub лайв сторінці,\n// воно просто зберігає їх шляхи у URL та імпортує напряму в html при деплої проекту (як я розумію це)\n// ЦЕ НІЧОГО НЕ ЛАМАЄ ТА НЕ ВИКЛИКАЄ ПОМИЛОК, тому я маю бажання їх тут лишити, щоб не змінювати дизайн повторно\n\nconst LS_QUERY = 'user-query';\n\nconst gallery = document.querySelector('.gallery');\nconst galleryForm = document.querySelector('.search-photos');\nconst loader = document.querySelector('.loader-wrapper');\nconst moreBtn = document.querySelector('.more-btn');\n\nlet page = 1;\nlet limit = 40;\n\nconst informUser = (message, title = 'ERROR', icon = iconError, color = 'rgba(239, 64, 64, 1)') => {\n    iziToast.show({\n        title: title,\n        backgroundColor: color,\n        theme: 'dark',\n        message: message,\n        position: 'topRight',\n        timeout: 5000,\n        iconUrl: icon,\n    });\n};\n\nconst getTotalPages = (images) => {\n    return Math.ceil(images.totalHits / limit);\n};\n\nconst getPhotos = async (userQuery) => {\n\n    const response = await axios.get(`https://pixabay.com/api/`, {\n        params: {\n            key: '41527103-e0775164a767d3baf6162359a',\n            q: encodeURIComponent(userQuery).replace(/%20/g, '+'),\n            // replace(/%20/g, '+') тут для того щоб коректно відображати запроси від 2 слів й більше\n            // (наприклад: yellow flower || red dress || dog and cat),\n            // бекенду потрібен між словами символ '+', тому я на нього заміняю те що по стандарту стоїть\n            // encodeURIComponent(q) - це міра безпеки передачі строки з інпуту користувача у параметри на бекенд яку мені порадив chatGPT\n            image_type: 'photo',\n            orientation: 'horizontal',\n            safesearch: true,\n            per_page: limit,\n            page: page,\n        }\n    })\n    return response.data;\n};\n\nconst renderImages = (images) => {\n    const allImages = images.hits;\n    if (images.totalHits === 0) {\n        loader.classList.add('visually-hidden');\n        moreBtn.classList.add('visually-hidden');\n        return informUser('Sorry, there are no images matching your search query. Please, try again!');\n    }\n    else {\n        const galleryMarkup = allImages.map(({ webformatURL: preview, largeImageURL: original, tags: description }) => {\n            return `\n                    <li class=\"gallery-item\">\n                        <a class=\"gallery-link\" href=\"${original}\">\n                            <img\n                                loading=\"lazy\"\n                                class=\"gallery-image\"\n                                src=\"${preview}\"\n                                alt=\"${description}\"\n                            />\n                        </a>\n                    </li>\n                    `\n        }).join('');\n        gallery.insertAdjacentHTML('beforeend', galleryMarkup);\n        const lightbox = new SimpleLightbox('.gallery a', {\n            navText: [\n                `<svg width=\"24\" height=\"24\"><use href=\"${iconLeft}\"></svg>`,\n                `<svg width=\"24\" height=\"24\"><use href=\"${iconRight}\"></svg>`\n            ],\n            captionsData: \"alt\",\n             captionDelay: false,\n        });\n        lightbox.refresh();\n        loader.classList.add('visually-hidden');\n    };\n};\n    \nconst fetchAndRender = async (userQuery) => {\n    try {\n        const images = await getPhotos(userQuery);\n        const totalPages = getTotalPages(images);\n        renderImages(images);\n        if (page === totalPages) {\n            moreBtn.classList.add('visually-hidden');\n            informUser('The end of collection has been reached', 'INFO', iconWarn, 'rgba(167, 166, 145, 1)');\n        }\n        else if (page < totalPages) {\n            moreBtn.classList.remove('visually-hidden');\n        };\n    } catch (error) {\n        informUser('Something went wrong. Please, try again. Status: ', error.status);\n    }\n};\n\nconst onClick = async () => {\n    page += 1;\n    fetchAndRender(sessionStorage.getItem(LS_QUERY));\n    if (moreBtn.classList.contains('visually-hidden')) {\n        moreBtn.removeEventListener('click', onClick);\n    };\n};\n\nconst handleSubmit = async (e) => {\n    e.preventDefault();\n    page = 1;\n    gallery.innerHTML = '';\n    loader.classList.remove('visually-hidden');\n    moreBtn.classList.add('visually-hidden');\n    const formData = new FormData(e.currentTarget);\n    const userQuery = formData.get('search').trim().toLowerCase();\n    if (!userQuery || userQuery.length < 3) {\n        loader.classList.add('visually-hidden');\n        return informUser('Please, enter something (at least 3 characters long)');\n    }\n    sessionStorage.setItem(LS_QUERY, userQuery);\n    fetchAndRender(userQuery);\n    e.target.reset();\n    moreBtn.addEventListener('click', onClick);\n};\n\ngalleryForm.addEventListener('submit', handleSubmit);"],"names":["iconLeft","iconRight","iconError","iconWarn","LS_QUERY","gallery","galleryForm","loader","moreBtn","page","limit","informUser","message","title","icon","color","iziToast","getTotalPages","images","getPhotos","userQuery","axios","renderImages","allImages","galleryMarkup","preview","original","description","SimpleLightbox","fetchAndRender","totalPages","error","onClick","handleSubmit","e"],"mappings":"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"}